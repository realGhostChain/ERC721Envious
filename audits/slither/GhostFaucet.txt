[93m
GhostFaucet.constructor(address,address,uint256,uint256,int256[3]) (contracts/GhostFaucet.sol#31-53) ignores return value by IERC20(token).approve(collection,type()(uint256).max) (contracts/GhostFaucet.sol#52)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
[92m
Reentrancy in GhostFaucet.sendMeGhostNft(address) (contracts/GhostFaucet.sol#55-80):
	External calls:
	- IERC721Envious(nftAddress).disperse{value: disperseAmount}(values,etherAddresses) (contracts/GhostFaucet.sol#71)
	- IERC721EnviousDynamic(nftAddress).mint(msg.sender) (contracts/GhostFaucet.sol#75)
	- IERC721Envious(nftAddress).collateralize(tokenId,amounts,tokenAddresses) (contracts/GhostFaucet.sol#76)
	External calls sending eth:
	- IERC721Envious(nftAddress).disperse{value: disperseAmount}(values,etherAddresses) (contracts/GhostFaucet.sol#71)
	Event emitted after the call(s):
	- AssetAirdropped(msg.sender,friend,amount,block.timestamp) (contracts/GhostFaucet.sol#79)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
[92m
Address._revert(bytes,string) (contracts/openzeppelin/utils/Address.sol#231-243) uses assembly
	- INLINE ASM (contracts/openzeppelin/utils/Address.sol#236-239)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
[92m
Different versions of Solidity are used:
	- Version used: ['^0.8.0', '^0.8.1']
	- ^0.8.0 (contracts/GhostFaucet.sol#3)
	- ^0.8.0 (contracts/interfaces/IERC721Envious.sol#4)
	- ^0.8.0 (contracts/interfaces/IERC721EnviousDynamic.sol#4)
	- ^0.8.0 (contracts/interfaces/IGhostFaucet.sol#3)
	- ^0.8.0 (contracts/libraries/Sigmoid.sol#3)
	- ^0.8.0 (contracts/openzeppelin/token/ERC20/IERC20.sol#4)
	- ^0.8.0 (contracts/openzeppelin/token/ERC20/extensions/draft-IERC20Permit.sol#4)
	- ^0.8.0 (contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol#4)
	- ^0.8.0 (contracts/openzeppelin/token/ERC721/IERC721.sol#4)
	- ^0.8.0 (contracts/openzeppelin/token/ERC721/extensions/IERC721Enumerable.sol#4)
	- ^0.8.1 (contracts/openzeppelin/utils/Address.sol#4)
	- ^0.8.0 (contracts/openzeppelin/utils/introspection/IERC165.sol#4)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used[0m
[92m
Address._revert(bytes,string) (contracts/openzeppelin/utils/Address.sol#231-243) is never used and should be removed
Address.functionCall(address,bytes) (contracts/openzeppelin/utils/Address.sol#85-87) is never used and should be removed
Address.functionCall(address,bytes,string) (contracts/openzeppelin/utils/Address.sol#95-101) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (contracts/openzeppelin/utils/Address.sol#114-120) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (contracts/openzeppelin/utils/Address.sol#128-137) is never used and should be removed
Address.functionDelegateCall(address,bytes) (contracts/openzeppelin/utils/Address.sol#170-172) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (contracts/openzeppelin/utils/Address.sol#180-187) is never used and should be removed
Address.functionStaticCall(address,bytes) (contracts/openzeppelin/utils/Address.sol#145-147) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (contracts/openzeppelin/utils/Address.sol#155-162) is never used and should be removed
Address.isContract(address) (contracts/openzeppelin/utils/Address.sol#36-42) is never used and should be removed
Address.sendValue(address,uint256) (contracts/openzeppelin/utils/Address.sol#60-65) is never used and should be removed
Address.verifyCallResult(bool,bytes,string) (contracts/openzeppelin/utils/Address.sol#219-229) is never used and should be removed
Address.verifyCallResultFromTarget(address,bool,bytes,string) (contracts/openzeppelin/utils/Address.sol#195-211) is never used and should be removed
SafeERC20._callOptionalReturn(IERC20,bytes) (contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol#105-115) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol#46-59) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol#70-81) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol#61-68) is never used and should be removed
SafeERC20.safePermit(IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32) (contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol#83-97) is never used and should be removed
SafeERC20.safeTransfer(IERC20,address,uint256) (contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol#22-28) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol#30-37) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Pragma version^0.8.0 (contracts/GhostFaucet.sol#3) allows old versions
Pragma version^0.8.0 (contracts/interfaces/IERC721Envious.sol#4) allows old versions
Pragma version^0.8.0 (contracts/interfaces/IERC721EnviousDynamic.sol#4) allows old versions
Pragma version^0.8.0 (contracts/interfaces/IGhostFaucet.sol#3) allows old versions
Pragma version^0.8.0 (contracts/libraries/Sigmoid.sol#3) allows old versions
Pragma version^0.8.0 (contracts/openzeppelin/token/ERC20/IERC20.sol#4) allows old versions
Pragma version^0.8.0 (contracts/openzeppelin/token/ERC20/extensions/draft-IERC20Permit.sol#4) allows old versions
Pragma version^0.8.0 (contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol#4) allows old versions
Pragma version^0.8.0 (contracts/openzeppelin/token/ERC721/IERC721.sol#4) allows old versions
Pragma version^0.8.0 (contracts/openzeppelin/token/ERC721/extensions/IERC721Enumerable.sol#4) allows old versions
Pragma version^0.8.1 (contracts/openzeppelin/utils/Address.sol#4) allows old versions
Pragma version^0.8.0 (contracts/openzeppelin/utils/introspection/IERC165.sol#4) allows old versions
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
[92m
Low level call in Address.sendValue(address,uint256) (contracts/openzeppelin/utils/Address.sol#60-65):
	- (success) = recipient.call{value: amount}() (contracts/openzeppelin/utils/Address.sol#63)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (contracts/openzeppelin/utils/Address.sol#128-137):
	- (success,returndata) = target.call{value: value}(data) (contracts/openzeppelin/utils/Address.sol#135)
Low level call in Address.functionStaticCall(address,bytes,string) (contracts/openzeppelin/utils/Address.sol#155-162):
	- (success,returndata) = target.staticcall(data) (contracts/openzeppelin/utils/Address.sol#160)
Low level call in Address.functionDelegateCall(address,bytes,string) (contracts/openzeppelin/utils/Address.sol#180-187):
	- (success,returndata) = target.delegatecall(data) (contracts/openzeppelin/utils/Address.sol#185)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
[92m
Function IERC20Permit.DOMAIN_SEPARATOR() (contracts/openzeppelin/token/ERC20/extensions/draft-IERC20Permit.sol#59) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
Sigmoid._sqrt(uint256) (contracts/libraries/Sigmoid.sol#20-70) uses literals with too many digits:
	- xx >= 0x100000000000000000000000000000000 (contracts/libraries/Sigmoid.sol#26)
Sigmoid._sqrt(uint256) (contracts/libraries/Sigmoid.sol#20-70) uses literals with too many digits:
	- xx >= 0x10000000000000000 (contracts/libraries/Sigmoid.sol#31)
Sigmoid._sqrt(uint256) (contracts/libraries/Sigmoid.sol#20-70) uses literals with too many digits:
	- xx >= 0x100000000 (contracts/libraries/Sigmoid.sol#36)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
contracts/GhostFaucet.sol analyzed (12 contracts with 78 detectors), 44 result(s) found
