module.exports = {
	client: require("ganache-cli"),
	skipFiles: [
		'Migrations.sol',
		'chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol',
		'chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol',
		'chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol',
		'interfaces/IBondDepository.sol',
		'interfaces/IERC721Envious.sol',
		'interfaces/INoteKeeper.sol',
		'openzeppelin/access/AccessControlEnumerable.sol',
		'openzeppelin/access/IAccessControlEnumerable.sol',
		'openzeppelin/access/AccessControl.sol',
		'openzeppelin/access/IAccessControl.sol',
		'openzeppelin/access/Ownable.sol',
		'openzeppelin/security/Pausable.sol',
		'openzeppelin/token/ERC20/ERC20.sol',
		'openzeppelin/token/ERC20/IERC20.sol',
		'openzeppelin/token/ERC20/utils/SafeERC20.sol',
		'openzeppelin/token/ERC20/extensions/draft-ERC20Permit.sol',
		'openzeppelin/token/ERC20/extensions/draft-IERC20Permit.sol',
		'openzeppelin/token/ERC20/extensions/IERC20Metadata.sol',
		'openzeppelin/token/ERC721/ERC721.sol',
		'openzeppelin/token/ERC721/IERC721.sol',
		'openzeppelin/token/ERC721/IERC721Receiver.sol',
		'openzeppelin/token/ERC721/extensions/ERC721Burnable.sol',
		'openzeppelin/token/ERC721/extensions/ERC721Pausable.sol',
		'openzeppelin/token/ERC721/extensions/ERC721Enumerable.sol',
		'openzeppelin/token/ERC721/extensions/IERC721Enumerable.sol',
		'openzeppelin/token/ERC721/extensions/IERC721Metadata.sol',
		'openzeppelin/utils/Address.sol',
		'openzeppelin/utils/Context.sol',
		'openzeppelin/utils/Counters.sol',
		'openzeppelin/utils/Strings.sol',
		'openzeppelin/utils/introspection/ERC165.sol',
		'openzeppelin/utils/introspection/IERC165.sol',
		'openzeppelin/utils/math/Math.sol',
		'openzeppelin/utils/math/SafeMath.sol',
		'openzeppelin/utils/structs/EnumerableSet.sol',
		'openzeppelin/utils/cryptography/ECDSA.sol',
		'openzeppelin/utils/cryptography/EIP712.sol',
		'openzeppelin/mocks/ERC721ReceiverMock.sol',
		'openzeppelin/mocks/ERC721Mock.sol',
		'openzeppelin/mocks/ERC721BasicMock.sol',
		'mocks/StakingMock.sol',
		'mocks/BadToken.sol'
	],
	mocha: {reporter: 'spec'}
};
